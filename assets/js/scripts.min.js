/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2022. License: MIT
 */
window.onload=function(){const e=new IntersectionObserver(function(e,t){e.forEach(e=>{e.isIntersecting?(e.target.classList.remove("animate-off"),e.target.classList.add("animate")):(e.target.classList.remove("animate"),e.target.classList.add("animate-off"))})},{root:null,rootMargin:"24px",threshold:.5});function t(e){let t=window.innerWidth/2,n=window.innerHeight/2,s=e.clientX,a=e.clientY;this.querySelectorAll(".parallaxed").forEach((e,i)=>{let o=-.001*i-.001;e.style.marginLeft=`${(s-t)*o}%`,e.style.marginTop=`${(a-n)*o}%`})}document.querySelectorAll("section").forEach(t=>e.observe(t)),document.querySelectorAll(".parallax").forEach(e=>{e.addEventListener("mousemove",t)});const n=document.querySelectorAll(".section");let s=!1;function a(e,t,n,a){s=!0;let i=null,o=window.pageYOffset||document.documentElement.scrollTop,c=window.innerHeight,r=0,l=0;switch(a){case"center":r=t?(c+e.offsetHeight)/2:e.parentElement.getBoundingClientRect().top+(c+e.offsetHeight)/2;break;case"bottom":r=e.parentElement.getBoundingClientRect().bottom-c,e.classList.add("animate");break;default:r=e.getBoundingClientRect().top}!function(){const e=["ms","moz","webkit","o"];for(let t=0,n=e.length;t<n&&!window.requestAnimationFrame;t++)window.requestAnimationFrame=window[e[t]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[t]+"CancelAnimationFrame"]||window[e[t]+"CancelRequestAnimationFrame"]}(),window.requestAnimationFrame(function a(c){i||(i=c||(new Date).getTime());let d=(c-i)/+n;d=+d.toFixed(2);let m=+(u=d,u*(2-u)).toFixed(2);var u;l=+(l=o+r*m).toFixed(2),window.scrollTo(0,l),isNaN(l)||l<0||!t&&l<=0||!t&&l<=o+r+1||t&&l>=o+r||t&&l>=document.body.clientHeight-window.innerHeight-1||l>document.body.clientHeight-window.innerHeight?(cancelAnimationFrame(i),e&&e.focus(),l=0,s=!1):window.requestAnimationFrame(a)})}function i(e,t,n,s){!n&&t.offsetHeight<window.innerHeight||(e.classList.add("animate-fade"),t.classList.remove("animate-fade"))}function o(e){e.preventDefault();let t=e.deltaY>0;if(!s){let e,o=Array.from(n).findIndex(e=>e.classList.contains("animate"));if(e=t?o+1<n.length?Array.from(n)[o+1]:Array.from(n)[o]:o>0?Array.from(n)[o-1]:Array.from(n)[0],console.log(n[o],e),n[o].classList.contains("section--variants")){let c=document.querySelectorAll(".section--variants .variant");t&&c[c.length-1].classList.contains("variant--current")||!t&&c[0].classList.contains("variant--current")?(new i(n[o],e,t,600),new a(e,t,600)):new function(e,t,n){s=!0;let a=e.querySelector(".section__variants").getBoundingClientRect().top,i=e.querySelector("ul"),o=e.querySelector(".variant--current"),c=n?Array.from(t).findIndex(e=>e.classList.contains("variant--current"))+1:Array.from(t).findIndex(e=>e.classList.contains("variant--current"))-1,r=Array.from(t)[c].getBoundingClientRect().top,l=0;if(i.style.transform){let e=window.getComputedStyle(i);l=new DOMMatrixReadOnly(e.transform).m42}console.log(a,i.getBoundingClientRect().top,r,l),o.classList.remove("variant--current"),Array.from(t)[c].classList.add("variant--current"),i.style.transform=`translateY(${a-r+l}px)`,setTimeout(()=>s=!1,300)}(document.querySelector(".section--variants"),c,t)}else if(n[o].classList.contains("section--world")){let c=document.querySelectorAll(".section--world .section__slide");t&&c[c.length-1].classList.contains("show")||!t&&c[0].classList.contains("show")?(new i(n[o],e,t,600),new a(e,t,600)):new function(e,t,n){s=!0;let a=Array.from(t).findIndex(e=>e.classList.contains("show")),i=n?a+1:a-1;Array.from(t)[a].classList.remove("show"),Array.from(t)[i].classList.add("show"),e.setAttribute("data-slide",+i),setTimeout(()=>s=!1,300)}(n[o],c,t)}else if(n[o].classList.contains("section--backstory")&&t||e.classList.contains("section--backstory")&&!t||e.classList.contains("section--world")&&!t||document.querySelector(".place").classList.contains("animate")){let s=document.querySelector(".section--backstory .place");s.classList.contains("animate")?t?(s.classList.remove("animate"),new i(n[o].querySelector(".section__content"),s,t,900),new a(s,t,900,"center")):(n[o].classList.remove("animate"),new a(e,t,600)):s.classList.contains("animate-fade")?(s.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new a(s,t,900,"center")):t?(new a(s,t,900,"center"),s.classList.add("animate-fade")):(new a(n[o],t,600),s.classList.add("animate"),n[o].querySelector(".section__content").classList.remove("animate-fade"))}else if(n[o].classList.contains("section--opportunities")&&t||e.classList.contains("section--backstory")&&!t||e.classList.contains("section--opportunities")&&!t||document.querySelector(".community").classList.contains("animate")){let s=document.querySelector(".section--opportunities .community");s.classList.contains("animate")?t?(s.classList.remove("animate"),new i(n[o].querySelector(".section__content"),s,t,900),new a(s,t,900,"center")):(n[o].classList.remove("animate"),new a(e,t,600)):s.classList.contains("animate-fade")?(s.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new a(s,t,900,"center")):t?(new a(s,t,900,"center"),s.classList.add("animate-fade")):(new a(n[o],t,600),s.classList.add("animate"),n[o].querySelector(".section__content").classList.remove("animate-fade"))}else if(n[o].classList.contains("section--roadmap")&&t||e.classList.contains("section--opportunities")&&!t||e.classList.contains("section--roadmap")&&!t||document.querySelector(".expertise").classList.contains("animate")){let s=document.querySelector(".section--roadmap .expertise");s.classList.contains("animate")?t?(new i(n[o].querySelector(".section__content"),s,t,900),new a(s,t,900,"bottom"),s.classList.remove("animate")):(n[o].classList.remove("animate"),new a(e,t,600)):s.classList.contains("animate-fade")?(s.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new a(s,t,900,"bottom")):t?(new a(e,t,900,"bottom"),s.classList.add("animate-fade")):(new a(s,t,600),s.classList.add("animate"),n[o].querySelector(".section__content").classList.remove("animate-fade"))}else new a(e,t,600)}}window.addEventListener("wheel",o,{passive:!1}),window.addEventListener("mousewheel",o,{passive:!1}),window.addEventListener("DOMMouseScroll",o,{passive:!1}),document.querySelectorAll("iframe").forEach(e=>{e.addEventListener("wheel",o,{passive:!1}),e.addEventListener("mousewheel",o,{passive:!1}),e.addEventListener("DOMMouseScroll",o,{passive:!1})}),new Splide(".splide",{perPage:3,perMove:1,gap:"32px",breakpoints:{820:{perPage:2},520:{perPage:1}}}).mount()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsid2luZG93Iiwib25sb2FkIiwib2JzZXJ2ZXIiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW50cnkiLCJpc0ludGVyc2VjdGluZyIsInRhcmdldCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInJvb3QiLCJyb290TWFyZ2luIiwidGhyZXNob2xkIiwiUGFyYWxsYXgiLCJlIiwiX3ciLCJpbm5lcldpZHRoIiwiX2giLCJpbm5lckhlaWdodCIsIl9tb3VzZVgiLCJjbGllbnRYIiwiX21vdXNlWSIsImNsaWVudFkiLCJ0aGlzIiwicXVlcnlTZWxlY3RvckFsbCIsImVsIiwiaW5kZXgiLCJtdWx0aXBseSIsInN0eWxlIiwibWFyZ2luTGVmdCIsIm1hcmdpblRvcCIsImRvY3VtZW50Iiwib2JzZXJ2ZSIsInBhcmFsbGF4IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlY3Rpb25zIiwiaXNTY3JvbGxpbmciLCJTY3JvbGwiLCJlbGVtZW50IiwiaXNEb3duIiwic3BlZWQiLCJ0eXBlIiwic3RhcnQiLCJmaXJzdFBvcyIsInBhZ2VZT2Zmc2V0IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsVG9wIiwid2luZG93SGVpZ2h0IiwicG9zIiwib2Zmc2V0SGVpZ2h0IiwicGFyZW50RWxlbWVudCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsImJvdHRvbSIsImJyb3dzZXIiLCJ4IiwibGVuZ3RoIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJzaG93QW5pbWF0aW9uIiwidGltZXN0YW1wIiwiRGF0ZSIsImdldFRpbWUiLCJwcm9ncmVzcyIsInRvRml4ZWQiLCJlYXNlSW5QZXJjZW50YWdlIiwibiIsInNjcm9sbFRvIiwiaXNOYU4iLCJib2R5IiwiY2xpZW50SGVpZ2h0IiwiZm9jdXMiLCJBbmltYXRlRmFkZSIsImN1cnJlbnQiLCJpZERvd24iLCJ0aW1lIiwiV2hlZWwiLCJwcmV2ZW50RGVmYXVsdCIsImRlbHRhWSIsIkFycmF5IiwiZnJvbSIsImZpbmRJbmRleCIsInNlY3Rpb24iLCJjb250YWlucyIsImNvbnNvbGUiLCJsb2ciLCJ2YXJpYW50cyIsImNvbnRhaW5lciIsImVsZW1lbnRzIiwiY29udGFpbmVyVG9wIiwicXVlcnlTZWxlY3RvciIsInBhcmVudCIsInRhcmdldEluZGV4IiwidHJhbnNmb3JtIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIkRPTU1hdHJpeFJlYWRPbmx5IiwibTQyIiwic2V0VGltZW91dCIsInNsaWRlcyIsInNldEF0dHJpYnV0ZSIsInBsYWNlIiwiY29tbXVuaXR5IiwiZXhwZXJ0aXNlIiwicGFzc2l2ZSIsImlmcmFtZSIsIlNwbGlkZSIsInBlclBhZ2UiLCJwZXJNb3ZlIiwiZ2FwIiwiYnJlYWtwb2ludHMiLCI4MjAiLCI1MjAiLCJtb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQUEsT0FBQUMsT0FBQSxXQWFBLE1BQUFDLEVBQUEsSUFBQUMscUJBTkEsU0FBQUMsRUFBQUYsR0FQQUUsRUFBQUMsUUFBQUMsSUFDQUEsRUFBQUMsZ0JBRUFELEVBQUFFLE9BQUFDLFVBQUFDLE9BQUEsZUFDQUosRUFBQUUsT0FBQUMsVUFBQUUsSUFBQSxhQUdBTCxFQUFBRSxPQUFBQyxVQUFBQyxPQUFBLFdBQ0FKLEVBQUFFLE9BQUFDLFVBQUFFLElBQUEsb0JBTkFDLEtBQUEsS0FDQUMsV0FBQSxPQUNBQyxVQUFBLEtBY0EsU0FBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBakIsT0FBQWtCLFdBQUEsRUFDQUMsRUFBQW5CLE9BQUFvQixZQUFBLEVBQ0FDLEVBQUFMLEVBQUFNLFFBQ0FDLEVBQUFQLEVBQUFRLFFBQ0FDLEtBQUFDLGlCQUFBLGVBQ0FyQixRQUFBLENBQUFzQixFQUFBQyxLQUNBLElBQUFDLEdBQUEsS0FBQUQsRUFBQSxLQUNBRCxFQUFBRyxNQUFBQyxlQUFBVixFQUFBSixHQUFBWSxLQUNBRixFQUFBRyxNQUFBRSxj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YUFBQTBDLEdBQUEyQixTQUFBLElBQ0F6RyxPQUFBb0MsaUJBQUEsaUJBQUEwQyxHQUFBMkIsU0FBQSxJQUVBeEUsU0FBQVAsaUJBQUEsVUFDQXJCLFFBQUFxRyxJQUNBQSxFQUFBdEUsaUJBQUEsUUFBQTBDLEdBQUEyQixTQUFBLElBQ0FDLEVBQUF0RSxpQkFBQSxhQUFBMEMsR0FBQTJCLFNBQUEsSUFDQUMsRUFBQXRFLGlCQUFBLGlCQUFBMEMsR0FBQTJCLFNBQUEsTUFnQkEsSUFBQUUsT0FBQSxXQUNBQyxRQUFBLEVBQ0FDLFFBQUEsRUFDQUMsSUFBQSxPQUNBQyxhQUNBQyxLQUNBSixRQUFBLEdBRUFLLEtBQ0FMLFFBQUEsTUFJQU0iLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICBjb25zdCBvYnNlcnZlck9wdGlvbnMgPSB7XG4gICAgcm9vdDogbnVsbCxcbiAgICByb290TWFyZ2luOiBcIjI0cHhcIixcbiAgICB0aHJlc2hvbGQ6IDAuNVxuICB9O1xuXG4gIGZ1bmN0aW9uIG9ic2VydmVyQ2FsbGJhY2soZW50cmllcywgb2JzZXJ2ZXIpIHtcbiAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgIC8vIGZhZGUgaW4gb2JzZXJ2ZWQgZWxlbWVudHMgdGhhdCBhcmUgaW4gdmlld1xuICAgICAgICBlbnRyeS50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZS1vZmYnKTtcbiAgICAgICAgZW50cnkudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGZhZGUgb3V0IG9ic2VydmVkIGVsZW1lbnRzIHRoYXQgYXJlIG5vdCBpbiB2aWV3XG4gICAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlJyk7XG4gICAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdhbmltYXRlLW9mZicpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIob2JzZXJ2ZXJDYWxsYmFjaywgb2JzZXJ2ZXJPcHRpb25zKTtcblxuICBjb25zdCBmYWRlRWxtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3NlY3Rpb24nKTtcbiAgZmFkZUVsbXMuZm9yRWFjaChlbCA9PiBvYnNlcnZlci5vYnNlcnZlKGVsKSk7XG5cbiAgZnVuY3Rpb24gUGFyYWxsYXgoZSkge1xuICAgIGxldCBfdyA9IHdpbmRvdy5pbm5lcldpZHRoLzI7XG4gICAgbGV0IF9oID0gd2luZG93LmlubmVySGVpZ2h0LzI7XG4gICAgbGV0IF9tb3VzZVggPSBlLmNsaWVudFg7XG4gICAgbGV0IF9tb3VzZVkgPSBlLmNsaWVudFk7XG4gICAgbGV0IGVsZW1zID0gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCcucGFyYWxsYXhlZCcpO1xuICAgIGVsZW1zLmZvckVhY2goKGVsLCBpbmRleCkgPT4ge1xuICAgICAgbGV0IG11bHRpcGx5ID0gaW5kZXggKiAtMC4wMDEgLSAwLjAwMTtcbiAgICAgIGVsLnN0eWxlLm1hcmdpbkxlZnQgPSBgJHsoX21vdXNlWCAtIF93KSAqIG11bHRpcGx5fSVgO1xuICAgICAgZWwuc3R5bGUubWFyZ2luVG9wID0gYCR7KF9tb3VzZVkgLSBfaCkgKiBtdWx0aXBseX0lYDtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0IHBhcmFsbGF4ZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGFyYWxsYXgnKTtcbiAgcGFyYWxsYXhlcy5mb3JFYWNoKChwYXJhbGxheCkgPT4ge1xuICAgIHBhcmFsbGF4LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgUGFyYWxsYXgpO1xuICB9KTtcblxuICBjb25zdCBzZWN0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWN0aW9uJyk7XG5cbiAgLy8gc2VjdGlvbnMuZm9yRWFjaCgoc2VjdGlvbikgPT4ge1xuICAvLyAgIGNvbnNvbGUubG9nKHNlY3Rpb24uY2xhc3NMaXN0KTtcbiAgLy8gfSk7XG4gIGxldCBpc1Njcm9sbGluZyA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIFNjcm9sbChlbGVtZW50LCBpc0Rvd24sIHNwZWVkLCB0eXBlKSB7XG4gICAgaXNTY3JvbGxpbmcgPSB0cnVlO1xuICAgIGxldCBzdGFydCA9IG51bGw7XG4gICAgbGV0IGZpcnN0UG9zID0gd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7XG4gICAgbGV0IHdpbmRvd0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBsZXQgdGFyZ2V0ID0gMDtcbiAgICBsZXQgcG9zID0gMDtcblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnY2VudGVyJzpcbiAgICAgICAgdGFyZ2V0ID0gaXNEb3duID8gKHdpbmRvd0hlaWdodCArIGVsZW1lbnQub2Zmc2V0SGVpZ2h0KSAvIDIgOiBlbGVtZW50LnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wICsgKHdpbmRvd0hlaWdodCArIGVsZW1lbnQub2Zmc2V0SGVpZ2h0KSAvIDI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYm90dG9tJzpcbiAgICAgICAgdGFyZ2V0ID0gZWxlbWVudC5wYXJlbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmJvdHRvbSAtIHdpbmRvd0hlaWdodDtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhbmltYXRlJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGFyZ2V0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8vIGNvbnNvbGUubG9nKGZpcnN0UG9zLCB0YXJnZXQsIHBvcyk7XG5cbiAgICAoZnVuY3Rpb24oKSB7XG5cbiAgICAgIGNvbnN0IGJyb3dzZXIgPSBbJ21zJywgJ21veicsICd3ZWJraXQnLCAnbyddO1xuXG4gICAgICBmb3IobGV0IHggPSAwLCBsZW5ndGggPSBicm93c2VyLmxlbmd0aDsgeCA8IGxlbmd0aCAmJiAhd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZTsgeCsrKSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3dbYnJvd3Nlclt4XSsnUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XG4gICAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSA9IHdpbmRvd1ticm93c2VyW3hdKydDYW5jZWxBbmltYXRpb25GcmFtZSddIHx8IHdpbmRvd1ticm93c2VyW3hdKydDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXTtcbiAgICAgIH1cblxuICAgIH0oKSk7XG5cbiAgICBmdW5jdGlvbiBzaG93QW5pbWF0aW9uICh0aW1lc3RhbXApIHtcblxuICAgICAgaWYoIXN0YXJ0KSB7IHN0YXJ0ID0gdGltZXN0YW1wIHx8IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9IC8vZ2V0IGlkIG9mIGFuaW1hdGlvblxuXG4gICAgICBsZXQgZWxhcHNlZCA9IHRpbWVzdGFtcCAtIHN0YXJ0O1xuICAgICAgbGV0IHByb2dyZXNzID0gZWxhcHNlZCAvICtzcGVlZDsgLy8gYW5pbWF0aW9uIGR1cmF0aW9uIDUwMG1zXG4gICAgICBwcm9ncmVzcyA9ICtwcm9ncmVzcy50b0ZpeGVkKDIpO1xuXG4gICAgICAvLyBjb25zb2xlLmxvZyhzdGFydCwgdGltZXN0YW1wLCBwcm9ncmVzcywgZWxhcHNlZCwgc3BlZWQsIGZpcnN0UG9zLCB0YXJnZXQsIHBvcyk7XG5cbiAgICAgIC8vZWFzZSBpbiBmdW5jdGlvbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9jb21wb25lbnQvZWFzZS9ibG9iL21hc3Rlci9pbmRleC5qc1xuICAgICAgY29uc3Qgb3V0UXVhZCA9IGZ1bmN0aW9uKG4pe1xuICAgICAgICByZXR1cm4gbiAqICgyIC0gbik7XG4gICAgICB9O1xuXG4gICAgICBsZXQgZWFzZUluUGVyY2VudGFnZSA9ICsob3V0UXVhZChwcm9ncmVzcykpLnRvRml4ZWQoMik7XG5cbiAgICAgIHBvcyA9IGZpcnN0UG9zICsgKHRhcmdldCAqIGVhc2VJblBlcmNlbnRhZ2UpO1xuICAgICAgcG9zID0gK3Bvcy50b0ZpeGVkKDIpO1xuICAgICAgd2luZG93LnNjcm9sbFRvKDAsIHBvcyk7XG5cbiAgICAgIC8vIGNvbnNvbGUubG9nKGZpcnN0UG9zLCB0YXJnZXQsIHBvcywgZWFzZUluUGVyY2VudGFnZSk7XG5cbiAgICAgIGlmKCBpc05hTihwb3MpIHx8IHBvcyA8IDAgfHxcbiAgICAgICAgIWlzRG93biAmJiBwb3MgPD0gMCB8fFxuICAgICAgICAhaXNEb3duICYmIHBvcyA8PSAoZmlyc3RQb3MgKyB0YXJnZXQgKyAxKSB8fFxuICAgICAgICBpc0Rvd24gJiYgcG9zID49IChmaXJzdFBvcyArIHRhcmdldCkgfHxcbiAgICAgICAgaXNEb3duICYmIHBvcyA+PSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCAtIHdpbmRvdy5pbm5lckhlaWdodCAtIDEgfHxcbiAgICAgICAgcG9zID4gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQgLSB3aW5kb3cuaW5uZXJIZWlnaHQgKSB7XG4gICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHN0YXJ0KTtcbiAgICAgICAgaWYoZWxlbWVudCkge1xuICAgICAgICAgIGVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgICBwb3MgPSAwO1xuICAgICAgICBpc1Njcm9sbGluZyA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShzaG93QW5pbWF0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShzaG93QW5pbWF0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIElubmVyU2Nyb2xsKGNvbnRhaW5lciwgZWxlbWVudHMsIGlzRG93bikge1xuICAgIGlzU2Nyb2xsaW5nID0gdHJ1ZTtcbiAgICBsZXQgY29udGFpbmVyVG9wID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX192YXJpYW50cycpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICBsZXQgcGFyZW50ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7XG4gICAgbGV0IGN1cnJlbnQgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnZhcmlhbnQtLWN1cnJlbnQnKTtcbiAgICBsZXQgdGFyZ2V0SW5kZXggPSBpc0Rvd24gP1xuICAgICAgQXJyYXkuZnJvbShlbGVtZW50cykuZmluZEluZGV4KCBlbCA9PiBlbC5jbGFzc0xpc3QuY29udGFpbnMoJ3ZhcmlhbnQtLWN1cnJlbnQnKSkgKyAxIDpcbiAgICAgIEFycmF5LmZyb20oZWxlbWVudHMpLmZpbmRJbmRleCggZWwgPT4gZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCd2YXJpYW50LS1jdXJyZW50JykpIC0gMTtcbiAgICBsZXQgdGFyZ2V0ID0gQXJyYXkuZnJvbShlbGVtZW50cylbdGFyZ2V0SW5kZXhdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICBsZXQgcG9zID0gMDtcbiAgICBpZiAocGFyZW50LnN0eWxlLnRyYW5zZm9ybSkge1xuICAgICAgbGV0IHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUocGFyZW50KTtcbiAgICAgIGxldCBtYXRyaXggPSBuZXcgRE9NTWF0cml4UmVhZE9ubHkoc3R5bGUudHJhbnNmb3JtKTtcbiAgICAgIHBvcyA9IG1hdHJpeC5tNDI7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKGNvbnRhaW5lclRvcCwgcGFyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCwgdGFyZ2V0LCBwb3MpO1xuICAgIGN1cnJlbnQuY2xhc3NMaXN0LnJlbW92ZSgndmFyaWFudC0tY3VycmVudCcpO1xuICAgIEFycmF5LmZyb20oZWxlbWVudHMpW3RhcmdldEluZGV4XS5jbGFzc0xpc3QuYWRkKCd2YXJpYW50LS1jdXJyZW50Jyk7XG4gICAgcGFyZW50LnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGVZKCR7Y29udGFpbmVyVG9wIC0gdGFyZ2V0ICsgcG9zfXB4KWA7XG4gICAgc2V0VGltZW91dCgoKSA9PiBpc1Njcm9sbGluZyA9IGZhbHNlLCAzMDApO1xuICB9XG5cbiAgZnVuY3Rpb24gU2xpZGVzU2Nyb2xsKGNvbnRhaW5lciwgZWxlbWVudHMsIGlzRG93bikge1xuICAgIGlzU2Nyb2xsaW5nID0gdHJ1ZTtcbiAgICBsZXQgY3VycmVudCA9IEFycmF5LmZyb20oZWxlbWVudHMpLmZpbmRJbmRleChlbCA9PiBlbC5jbGFzc0xpc3QuY29udGFpbnMoJ3Nob3cnKSk7XG4gICAgbGV0IHRhcmdldCA9IGlzRG93biA/IGN1cnJlbnQgKyAxIDogY3VycmVudCAtIDE7XG4gICAgQXJyYXkuZnJvbShlbGVtZW50cylbY3VycmVudF0uY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuICAgIEFycmF5LmZyb20oZWxlbWVudHMpW3RhcmdldF0uY2xhc3NMaXN0LmFkZCgnc2hvdycpO1xuICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2RhdGEtc2xpZGUnLCArdGFyZ2V0KTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IGlzU2Nyb2xsaW5nID0gZmFsc2UsIDMwMCk7XG4gIH1cblxuICBmdW5jdGlvbiBBbmltYXRlRmFkZShjdXJyZW50LCB0YXJnZXQsIGlkRG93biwgdGltZSkge1xuICAgIGlmICghKCFpZERvd24gJiYgdGFyZ2V0Lm9mZnNldEhlaWdodCA8IHdpbmRvdy5pbm5lckhlaWdodCkpIHtcbiAgICAgIGN1cnJlbnQuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICB0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gV2hlZWwoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsZXQgaXNEb3duID0gZS5kZWx0YVkgPiAwO1xuICAgIGlmICghaXNTY3JvbGxpbmcpIHtcbiAgICAgIGxldCBjdXJyZW50ID0gQXJyYXkuZnJvbShzZWN0aW9ucykuZmluZEluZGV4KHNlY3Rpb24gPT4gc2VjdGlvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUnKSk7XG4gICAgICBsZXQgdGFyZ2V0O1xuICAgICAgaWYgKGlzRG93bikge1xuICAgICAgICB0YXJnZXQgPSBjdXJyZW50ICsgMSA8IHNlY3Rpb25zLmxlbmd0aCA/IEFycmF5LmZyb20oc2VjdGlvbnMpW2N1cnJlbnQgKyAxXSA6IEFycmF5LmZyb20oc2VjdGlvbnMpW2N1cnJlbnRdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0ID0gY3VycmVudCA+IDAgPyBBcnJheS5mcm9tKHNlY3Rpb25zKVtjdXJyZW50IC0gMV0gOiBBcnJheS5mcm9tKHNlY3Rpb25zKVswXTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coc2VjdGlvbnNbY3VycmVudF0sIHRhcmdldCk7XG5cbiAgICAgIGlmIChzZWN0aW9uc1tjdXJyZW50XS5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLXZhcmlhbnRzJykpIHtcbiAgICAgICAgbGV0IHZhcmlhbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlY3Rpb24tLXZhcmlhbnRzIC52YXJpYW50Jyk7XG4gICAgICAgIGlmIChpc0Rvd24gJiYgdmFyaWFudHNbdmFyaWFudHMubGVuZ3RoIC0gMV0uY2xhc3NMaXN0LmNvbnRhaW5zKCd2YXJpYW50LS1jdXJyZW50JykgfHxcbiAgICAgICAgICAhaXNEb3duICYmIHZhcmlhbnRzWzBdLmNsYXNzTGlzdC5jb250YWlucygndmFyaWFudC0tY3VycmVudCcpKSB7XG4gICAgICAgICAgbmV3IEFuaW1hdGVGYWRlKHNlY3Rpb25zW2N1cnJlbnRdLCB0YXJnZXQsIGlzRG93biwgNjAwKTtcbiAgICAgICAgICBuZXcgU2Nyb2xsKHRhcmdldCwgaXNEb3duLCA2MDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ldyBJbm5lclNjcm9sbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi0tdmFyaWFudHMnKSwgdmFyaWFudHMsIGlzRG93bik7XG4gICAgICAgIH1cblxuICAgICAgfSBlbHNlIGlmIChzZWN0aW9uc1tjdXJyZW50XS5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLXdvcmxkJykpIHtcbiAgICAgICAgbGV0IHNsaWRlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWN0aW9uLS13b3JsZCAuc2VjdGlvbl9fc2xpZGUnKTtcbiAgICAgICAgaWYgKGlzRG93biAmJiBzbGlkZXNbc2xpZGVzLmxlbmd0aCAtIDFdLmNsYXNzTGlzdC5jb250YWlucygnc2hvdycpIHx8XG4gICAgICAgICAgIWlzRG93biAmJiBzbGlkZXNbMF0uY2xhc3NMaXN0LmNvbnRhaW5zKCdzaG93JykpIHtcbiAgICAgICAgICBuZXcgQW5pbWF0ZUZhZGUoc2VjdGlvbnNbY3VycmVudF0sIHRhcmdldCwgaXNEb3duLCA2MDApO1xuICAgICAgICAgIG5ldyBTY3JvbGwodGFyZ2V0LCBpc0Rvd24sIDYwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmV3IFNsaWRlc1Njcm9sbChzZWN0aW9uc1tjdXJyZW50XSwgc2xpZGVzLCBpc0Rvd24pO1xuICAgICAgICB9XG5cbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLmNsYXNzTGlzdC5jb250YWlucygnc2VjdGlvbi0tYmFja3N0b3J5JykgJiYgaXNEb3duIHx8XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLWJhY2tzdG9yeScpICYmICFpc0Rvd24gfHxcbiAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2VjdGlvbi0td29ybGQnKSAmJiAhaXNEb3duIHx8XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wbGFjZScpLmNsYXNzTGlzdC5jb250YWlucygnYW5pbWF0ZScpXG4gICAgICApIHtcbiAgICAgICAgbGV0IHBsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlY3Rpb24tLWJhY2tzdG9yeSAucGxhY2UnKTtcbiAgICAgICAgaWYgKHBsYWNlLmNsYXNzTGlzdC5jb250YWlucygnYW5pbWF0ZScpKSB7XG4gICAgICAgICAgaWYgKGlzRG93bikge1xuICAgICAgICAgICAgcGxhY2UuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZScpO1xuICAgICAgICAgICAgbmV3IEFuaW1hdGVGYWRlKHNlY3Rpb25zW2N1cnJlbnRdLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX19jb250ZW50JyksIHBsYWNlLCBpc0Rvd24sIDkwMCk7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKHBsYWNlLCBpc0Rvd24sIDkwMCwgJ2NlbnRlcicpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZWN0aW9uc1tjdXJyZW50XS5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlJyk7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKHRhcmdldCwgaXNEb3duLCA2MDApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChwbGFjZS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUtZmFkZScpKSB7XG4gICAgICAgICAgcGxhY2UuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICAgICAgdGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX19jb250ZW50JykuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICAgICAgbmV3IFNjcm9sbChwbGFjZSwgaXNEb3duLCA5MDAsICdjZW50ZXInKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaXNEb3duKSB7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKHBsYWNlLCBpc0Rvd24sIDkwMCwgJ2NlbnRlcicpO1xuICAgICAgICAgICAgcGxhY2UuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ldyBTY3JvbGwoc2VjdGlvbnNbY3VycmVudF0sIGlzRG93biwgNjAwKTtcbiAgICAgICAgICAgIHBsYWNlLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUnKTtcbiAgICAgICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX19jb250ZW50JykuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLmNsYXNzTGlzdC5jb250YWlucygnc2VjdGlvbi0tb3Bwb3J0dW5pdGllcycpICYmIGlzRG93biB8fFxuICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzZWN0aW9uLS1iYWNrc3RvcnknKSAmJiAhaXNEb3duIHx8XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLW9wcG9ydHVuaXRpZXMnKSAmJiAhaXNEb3duIHx8XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb21tdW5pdHknKS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUnKVxuICAgICAgKSB7XG4gICAgICAgIGxldCBjb21tdW5pdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi0tb3Bwb3J0dW5pdGllcyAuY29tbXVuaXR5Jyk7XG4gICAgICAgIGlmIChjb21tdW5pdHkuY2xhc3NMaXN0LmNvbnRhaW5zKCdhbmltYXRlJykpIHtcbiAgICAgICAgICBpZiAoaXNEb3duKSB7XG4gICAgICAgICAgICBjb21tdW5pdHkuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZScpO1xuICAgICAgICAgICAgbmV3IEFuaW1hdGVGYWRlKHNlY3Rpb25zW2N1cnJlbnRdLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX19jb250ZW50JyksIGNvbW11bml0eSwgaXNEb3duLCA5MDApO1xuICAgICAgICAgICAgbmV3IFNjcm9sbChjb21tdW5pdHksIGlzRG93biwgOTAwLCAnY2VudGVyJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUnKTtcbiAgICAgICAgICAgIG5ldyBTY3JvbGwodGFyZ2V0LCBpc0Rvd24sIDYwMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNvbW11bml0eS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUtZmFkZScpKSB7XG4gICAgICAgICAgY29tbXVuaXR5LmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIHRhcmdldC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbl9fY29udGVudCcpLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIG5ldyBTY3JvbGwoY29tbXVuaXR5LCBpc0Rvd24sIDkwMCwgJ2NlbnRlcicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChpc0Rvd24pIHtcbiAgICAgICAgICAgIG5ldyBTY3JvbGwoY29tbXVuaXR5LCBpc0Rvd24sIDkwMCwgJ2NlbnRlcicpO1xuICAgICAgICAgICAgY29tbXVuaXR5LmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKHNlY3Rpb25zW2N1cnJlbnRdLCBpc0Rvd24sIDYwMCk7XG4gICAgICAgICAgICBjb21tdW5pdHkuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZScpO1xuICAgICAgICAgICAgc2VjdGlvbnNbY3VycmVudF0ucXVlcnlTZWxlY3RvcignLnNlY3Rpb25fX2NvbnRlbnQnKS5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlLWZhZGUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgc2VjdGlvbnNbY3VycmVudF0uY2xhc3NMaXN0LmNvbnRhaW5zKCdzZWN0aW9uLS1yb2FkbWFwJykgJiYgaXNEb3duIHx8XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLW9wcG9ydHVuaXRpZXMnKSAmJiAhaXNEb3duIHx8XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlY3Rpb24tLXJvYWRtYXAnKSAmJiAhaXNEb3duIHx8XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leHBlcnRpc2UnKS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUnKVxuICAgICAgKSB7XG4gICAgICAgIGxldCBleHBlcnRpc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbi0tcm9hZG1hcCAuZXhwZXJ0aXNlJyk7XG4gICAgICAgIGlmIChleHBlcnRpc2UuY2xhc3NMaXN0LmNvbnRhaW5zKCdhbmltYXRlJykpIHtcbiAgICAgICAgICBpZiAoaXNEb3duKSB7XG4gICAgICAgICAgICBuZXcgQW5pbWF0ZUZhZGUoc2VjdGlvbnNbY3VycmVudF0ucXVlcnlTZWxlY3RvcignLnNlY3Rpb25fX2NvbnRlbnQnKSwgZXhwZXJ0aXNlLCBpc0Rvd24sIDkwMCk7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKGV4cGVydGlzZSwgaXNEb3duLCA5MDAsICdib3R0b20nKTtcbiAgICAgICAgICAgIGV4cGVydGlzZS5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUnKTtcbiAgICAgICAgICAgIG5ldyBTY3JvbGwodGFyZ2V0LCBpc0Rvd24sIDYwMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGV4cGVydGlzZS5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUtZmFkZScpKSB7XG4gICAgICAgICAgZXhwZXJ0aXNlLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIHRhcmdldC5xdWVyeVNlbGVjdG9yKCcuc2VjdGlvbl9fY29udGVudCcpLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIG5ldyBTY3JvbGwoZXhwZXJ0aXNlLCBpc0Rvd24sIDkwMCwgJ2JvdHRvbScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChpc0Rvd24pIHtcbiAgICAgICAgICAgIG5ldyBTY3JvbGwodGFyZ2V0LCBpc0Rvd24sIDkwMCwgJ2JvdHRvbScpO1xuICAgICAgICAgICAgZXhwZXJ0aXNlLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUtZmFkZScpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuZXcgU2Nyb2xsKGV4cGVydGlzZSwgaXNEb3duLCA2MDApO1xuICAgICAgICAgICAgZXhwZXJ0aXNlLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUnKTtcbiAgICAgICAgICAgIHNlY3Rpb25zW2N1cnJlbnRdLnF1ZXJ5U2VsZWN0b3IoJy5zZWN0aW9uX19jb250ZW50JykuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZS1mYWRlJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXcgU2Nyb2xsKHRhcmdldCwgaXNEb3duLCA2MDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIFdoZWVsLCB7cGFzc2l2ZTogZmFsc2V9KTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCBXaGVlbCwge3Bhc3NpdmU6IGZhbHNlfSk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Nb3VzZVNjcm9sbCcsIFdoZWVsLCB7cGFzc2l2ZTogZmFsc2V9KTtcblxuICBsZXQgaWZyYW1lcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lmcmFtZScpO1xuICBpZnJhbWVzLmZvckVhY2goKGlmcmFtZSkgPT4ge1xuICAgIGlmcmFtZS5hZGRFdmVudExpc3RlbmVyKCd3aGVlbCcsIFdoZWVsLCB7cGFzc2l2ZTogZmFsc2V9KTtcbiAgICBpZnJhbWUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIFdoZWVsLCB7cGFzc2l2ZTogZmFsc2V9KTtcbiAgICBpZnJhbWUuYWRkRXZlbnRMaXN0ZW5lcignRE9NTW91c2VTY3JvbGwnLCBXaGVlbCwge3Bhc3NpdmU6IGZhbHNlfSk7XG4gIH0pO1xuXG4gIC8vIGRvY3VtZW50Lm9ua2V5dXAgPSBmdW5jdGlvbihlKXtcbiAgLy8gICBjb25zb2xlLmxvZygnS2V5IDogJyArIGUuY29kZSk7XG4gIC8vICAgbGV0IGN1cnJlbnQgPSBBcnJheS5mcm9tKHNlY3Rpb25zKS5maW5kSW5kZXgoIHNlY3Rpb24gPT4gc2VjdGlvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2FuaW1hdGUnKSApO1xuICAvLyAgIGxldCB0YXJnZXQ7XG4gIC8vICAgaWYgKGUuY29kZSA9PT0gKCdTcGFjZScgfHwgJ0Fycm93RG93bicgfHwgJ1BhZ2VEb3duJyB8fCAnRG93bicpKSB7XG4gIC8vICAgICB0YXJnZXQgPSBjdXJyZW50ICsgMSA8IHNlY3Rpb25zLmxlbmd0aCA/IEFycmF5LmZyb20oc2VjdGlvbnMpW2N1cnJlbnQgKyAxXSA6IEFycmF5LmZyb20oc2VjdGlvbnMpW2N1cnJlbnRdO1xuICAvLyAgICAgbmV3IFNjcm9sbCh0YXJnZXQsIHRydWUpO1xuICAvLyAgIH0gZWxzZSBpZiAoZS5jb2RlID09PSAoJ0Fycm93VXAnIHx8ICdQYWdlVXAnIHx8ICdVcCcpKSB7XG4gIC8vICAgICB0YXJnZXQgPSBjdXJyZW50ID4gMCA/IEFycmF5LmZyb20oc2VjdGlvbnMpW2N1cnJlbnQgLSAxXSA6IEFycmF5LmZyb20oc2VjdGlvbnMpWzBdO1xuICAvLyAgICAgbmV3IFNjcm9sbCh0YXJnZXQsIGZhbHNlKTtcbiAgLy8gICB9XG4gIC8vIH07XG5cbiAgbGV0IHNwbGlkZSA9IG5ldyBTcGxpZGUoICcuc3BsaWRlJywge1xuICAgIHBlclBhZ2U6IDMsXG4gICAgcGVyTW92ZTogMSxcbiAgICBnYXAgICAgOiAnMzJweCcsXG4gICAgYnJlYWtwb2ludHM6IHtcbiAgICAgIDgyMDoge1xuICAgICAgICBwZXJQYWdlOiAyXG4gICAgICB9LFxuICAgICAgNTIwOiB7XG4gICAgICAgIHBlclBhZ2U6IDFcbiAgICAgIH0sXG4gICAgfSxcbiAgfSApO1xuICBzcGxpZGUubW91bnQoKTtcbn07XG5cbiJdfQ==
