/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2022. License: MIT
 */
window.onload=function(){const e=new IntersectionObserver(function(e,n){e.forEach(e=>{e.isIntersecting?(e.target.classList.remove("animate-off"),e.target.classList.add("animate")):(e.target.classList.remove("animate"),e.target.classList.add("animate-off"))})},{root:null,rootMargin:"0px",threshold:.85});document.querySelectorAll("section").forEach(n=>e.observe(n)),document.querySelector(".section--top").addEventListener("mousemove",function(e){let n=window.innerWidth/2,t=window.innerHeight/2,o=e.clientX,i=e.clientY;this.querySelectorAll(".parallaxed").forEach((e,r)=>{let a=-.001*r-.001;e.style.marginLeft=`${(o-n)*a}%`,e.style.marginTop=`${(i-t)*a}%`})});const n=document.querySelectorAll(".section");function t(e,n){let t=null;const o=window.pageYOffset||document.documentElement.scrollTop,i=e.getBoundingClientRect().top;let r=0;!function(){const e=["ms","moz","webkit","o"];for(let n=0,t=e.length;n<t&&!window.requestAnimationFrame;n++)window.requestAnimationFrame=window[e[n]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[n]+"CancelAnimationFrame"]||window[e[n]+"CancelRequestAnimationFrame"]}(),window.requestAnimationFrame(function a(c){t||(t=c||(new Date).getTime());let l=(c-t)/600;l=+l.toFixed(2);let m=+(s=l,s*(2-s)).toFixed(2);var s;r=+(r=o+i*m).toFixed(2),window.scrollTo(0,r),r<0||!n&&r<=0||!n&&r<=o+i+1||n&&r>=o+i||n&&r>=document.body.clientHeight-window.innerHeight-1||r>=document.body.clientHeight-window.innerHeight?(cancelAnimationFrame(t),e&&e.focus(),r=0):window.requestAnimationFrame(a)})}window.onwheel=(e=>{let o,i=Array.from(n).findIndex(e=>e.classList.contains("animate"));new t(o=e.deltaY>0?i+1<n.length?Array.from(n)[i+1]:Array.from(n)[i]:i>0?Array.from(n)[i-1]:Array.from(n)[0],e.deltaY>0)}),document.onkeyup=function(e){console.log("Key : "+e.code);let o,i=Array.from(n).findIndex(e=>e.classList.contains("animate"));"Space"===e.code?new t(o=i+1<n.length?Array.from(n)[i+1]:Array.from(n)[i],!0):"ArrowUp"===e.code&&new t(o=i>0?Array.from(n)[i-1]:Array.from(n)[0],!1)}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
