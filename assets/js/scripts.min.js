/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2022. License: MIT
 */
window.onload=function(){const e=new IntersectionObserver(function(e,t){e.forEach(e=>{e.isIntersecting?(e.target.classList.remove("animate-off"),e.target.classList.add("animate")):(e.target.classList.remove("animate"),e.target.classList.add("animate-off"))})},{root:null,rootMargin:"24px",threshold:.5});function t(e){let t=window.innerWidth/2,n=window.innerHeight/2,a=e.clientX,o=e.clientY;this.querySelectorAll(".parallaxed").forEach((e,s)=>{let i=-.001*s-.001;e.style.marginLeft=`${(a-t)*i}%`,e.style.marginTop=`${(o-n)*i}%`})}document.querySelectorAll(".section").forEach(t=>e.observe(t)),document.querySelectorAll(".parallax").forEach(e=>{e.addEventListener("mousemove",t)});const n=document.querySelectorAll(".section");let a=!1;function o(e,t,n,o){a=!0;let s=null,i=window.pageYOffset||document.documentElement.scrollTop,c=window.innerHeight,r=0,l=0;r="center"===o?t?(c+e.offsetHeight)/2:e.parentElement.getBoundingClientRect().top+(c+e.offsetHeight)/2:"bottom"===o?e.parentElement.getBoundingClientRect().bottom-c:e.getBoundingClientRect().top,console.log(i,r,l,e),function(){const e=["ms","moz","webkit","o"];for(let t=0,n=e.length;t<n&&!window.requestAnimationFrame;t++)window.requestAnimationFrame=window[e[t]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[t]+"CancelAnimationFrame"]||window[e[t]+"CancelRequestAnimationFrame"]}(),window.requestAnimationFrame(function o(c){s||(s=c||(new Date).getTime());let d=(c-s)/+n;d=+d.toFixed(2);let m=+(u=d,u*(2-u)).toFixed(2);var u;l=+(l=i+r*m).toFixed(2),window.scrollTo(0,l),console.log(i,r,l,m),isNaN(l)||l<0||!t&&l<=0||!t&&l<=i+r+1||t&&l>=i+r||t&&l>=document.body.clientHeight-window.innerHeight-1||l>document.body.clientHeight-window.innerHeight?(cancelAnimationFrame(s),e&&e.focus(),l=0,a=!1):window.requestAnimationFrame(o)})}function s(e,t,n){!n&&t.offsetHeight<window.innerHeight||(e.classList.add("animate-fade"),t.classList.remove("animate-fade"))}function i(e,t){e.preventDefault();let i=t||e.deltaY>0;if(!a){let e,t=Array.from(n).findIndex(e=>e.classList.contains("animate"));if(e=i?t+1<n.length?Array.from(n)[t+1]:Array.from(n)[t]:t>0?Array.from(n)[t-1]:Array.from(n)[0],n[t].classList.contains("section--variants")){let t=document.querySelectorAll(".section--variants .variant");i&&t[t.length-1].classList.contains("variant--current")||!i&&t[0].classList.contains("variant--current")?new o(e,i,600):new function(e,t,n){a=!0;let o=e.querySelector(".section__variants").getBoundingClientRect().top,s=e.querySelector("ul"),i=e.querySelector(".variant--current"),c=n?Array.from(t).findIndex(e=>e.classList.contains("variant--current"))+1:Array.from(t).findIndex(e=>e.classList.contains("variant--current"))-1,r=Array.from(t)[c].getBoundingClientRect().top,l=0;if(s.style.transform){let e=window.getComputedStyle(s);l=new DOMMatrixReadOnly(e.transform).m42}console.log(o,s.getBoundingClientRect().top,r,l),i.classList.remove("variant--current"),Array.from(t)[c].classList.add("variant--current"),s.style.transform=`translateY(${o-r+l}px)`,setTimeout(()=>a=!1,300)}(document.querySelector(".section--variants"),t,i)}else if(n[t].classList.contains("section--world")){let s=document.querySelectorAll(".section--world .section__slide");i&&s[s.length-1].classList.contains("show")||!i&&s[0].classList.contains("show")?new o(e,i,600):new function(e,t,n){a=!0;let o=Array.from(t).findIndex(e=>e.classList.contains("show")),s=n?o+1:o-1;Array.from(t)[o].classList.remove("show"),Array.from(t)[s].classList.add("show"),e.setAttribute("data-slide",+s),setTimeout(()=>a=!1,300)}(n[t],s,i)}else if(n[t].classList.contains("section--roadmap")||e.classList.contains("section--roadmap")&&!i||e.classList.contains("section--opportunities")&&!i){let a=document.querySelector(".section--roadmap .expertise");a.classList.contains("animate-off")?i?(new s(n[t].querySelector(".section__content"),a,i),new o(a,i,900,"bottom"),a.classList.remove("animate-off")):(e.querySelector(".community").classList.remove("animate-fade"),new o(e.querySelector(".community"),i,900,"center")):a.classList.contains("animate-fade")?(a.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new o(a,i,900,"bottom")):i?(new o(e,i,600),a.classList.add("animate-fade")):(new o(n[t],i,600),a.classList.add("animate-off"),n[t].querySelector(".section__content").classList.remove("animate-fade"))}else if(n[t].classList.contains("section--opportunities")||e.classList.contains("section--opportunities")&&!i||e.classList.contains("section--backstory")&&!i){let a=document.querySelector(".section--opportunities .community");a.classList.contains("animate-off")?i?(a.classList.remove("animate-off"),new s(n[t].querySelector(".section__content"),a,i),new o(a,i,900,"center")):(e.querySelector(".place").classList.remove("animate-fade"),new o(e.querySelector(".place"),i,900,"center")):a.classList.contains("animate-fade")?(a.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new o(a,i,900,"center")):i?(new o(a,i,900,"center"),a.classList.add("animate-fade")):(new o(n[t],i,600),a.classList.add("animate-off"),n[t].querySelector(".section__content").classList.remove("animate-fade"))}else if(n[t].classList.contains("section--backstory")||e.classList.contains("section--backstory")&&!i||e.classList.contains("section--world")&&!i){let a=document.querySelector(".section--backstory .place");a.classList.contains("animate-off")?i?(a.classList.remove("animate-off"),new s(n[t].querySelector(".section__content"),a,i),new o(a,i,900,"center")):(n[t].classList.remove("animate-off"),new o(e,i,600)):a.classList.contains("animate-fade")?(a.classList.remove("animate-fade"),e.querySelector(".section__content").classList.add("animate-fade"),new o(a,i,900,"center")):i?(new o(a,i,900,"center"),a.classList.add("animate-fade")):(new o(n[t],i,600),a.classList.add("animate-off"),n[t].querySelector(".section__content").classList.remove("animate-fade"))}else console.log(e),new o(e,i,600)}}window.addEventListener("wheel",i,{passive:!1}),window.addEventListener("mousewheel",i,{passive:!1}),window.addEventListener("DOMMouseScroll",i,{passive:!1});let c=0;document.body.ontouchstart=function(e){c=e.changedTouches[0].clientY,console.log(e.changedTouches)},window.addEventListener("touchmove",e=>{const t=Math.round(e.changedTouches[0].screenY);console.log(t,c),c-t>50?(e.preventDefault(),new i(e,!0)):c-t<-50&&(e.preventDefault(),new i(e,!1))}),new Splide(".road",{perPage:3,perMove:1,breakpoints:{920:{perPage:2},520:{perPage:1}}}).mount(),new Splide(".section__articles",{perPage:3,perMove:1,gap:"32px",breakpoints:{640:{gap:"16px",perPage:2},520:{gap:"16px",perPage:1}}}).mount(),new Splide(".section__opportunities",{perPage:4,perMove:1,gap:"32px",breakpoints:{920:{perPage:2},640:{perPage:1}}}).mount()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
